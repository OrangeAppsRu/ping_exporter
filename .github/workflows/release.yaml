name: release
on: 
  push:
    tags:
      - 'v*'
jobs:
  build_and_release:
    name: build_and_release
    runs-on: ubuntu-20.04
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: clone
        uses: actions/checkout@v2
      - name: install depends
        run: |
          go mod download
          mkdir artifacts
      - name: build
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o artifacts/ping_exporter-amd64 .
      - uses: kentik/pkg@v1.0.0-rc6
        with:
          name: ping_exporter
          version: ${{ github.ref }}
          arch: x86_64
          format: deb
          package: package.yaml
      - name: Upload relerase amd64
        id: upload-release-asset-amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/ping_exporter-amd64
          asset_name: ping_exporter-amd64
          asset_content_type: application/x-elf
      - run: |
          version=`echo -n "${{ github.ref }}" | sed 's@refs/tags@@g'`
          echo "::set-env name=VERSION::${version}"
          ls -la
      - name: Upload release deb
        id: upload-release-deb
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ping_exporter_${{ env.VERSION }}-1_amd64.deb
          asset_name: ping_exporter.deb
          asset_content_type: application/vnd.debian.binary-package

